function [y1,xf1] = nio_d10n8_r10(x1,xi1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 13-May-2019 15:32:08.
%
% [y1,xf1] = myNeuralNetworkFunction(x1,xi1) takes these arguments:
%   x1 = 3xTS matrix, input #1
%   xi1 = 3x10 matrix, initial 10 delay states for input #1.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 3x10 matrix, final 10 delay states for input #1.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 2];
x1_step2.xoffset = [1361;56];
x1_step2.gain = [0.00110741971207087;0.0176991150442478];
x1_step2.ymin = -1;

% Layer 1
b1 = [4.6701899291555148963;-3.6414798983074887495;-2.8300677814453591985;2.0254306642165320618;1.4471039274612569336;-0.52570752211925653175;-7.4808549771223358249;2.0399864764073916135];
IW1_1 = [-20.415341171966179701 5.3611090753623633631 -2.9440117610659335412 1.1706836927156891726 -5.7101980156710778758 0.70409507970027174206 -9.292261006483972352 -3.6147153343649756074 0.22346749997510220731 -5.3053995537390603587 8.1551937049081715259 -6.1273965262653877772 6.3079264351133366162 9.3715241632520225323 -9.5438850862370898653 4.1239469176356635671 5.8827597248833125576 -1.0348179751218979927 23.83982762236950137 1.7057645600804456354;20.204859279858840893 -9.1510933732116832573 13.196722798203960991 -3.766708891601729281 1.3103299955767560014 -0.51754097896939499357 -7.1048221607161234914 2.6071286292073789781 -10.947129136857151721 3.3019197896250211954 -6.6253013862988376914 3.9998199964284104624 -5.86560851116770543 -3.0924573939647852505 -2.4145664130092523436 -1.361448782049265338 0.8295569974539839242 1.1099412469674443393 0.23423089586179440813 0.16397238076078404778;-37.237008395339344702 15.09287334931367397 -28.24726884519268566 16.46665941497015595 -16.45612990133789566 11.038830221527909714 -4.3652626010986539384 -4.9266195999014685825 29.667997637601757788 -10.385855909174974698 13.691464653726399092 -7.4163759992690758693 43.402605457670233591 -13.310661408975654751 9.4415876466384283106 5.7387026573326167522 -0.81389355245955774532 -3.7694524725533797849 -9.1858639587700015028 -11.433021196520286367;18.966384405397128887 -3.0885241530895095607 -7.6859495842442324687 -0.24665852668247617574 4.5723840826514230429 -3.217367927014914919 1.9491090864355034018 -0.37625023926611872449 -2.7679853534121376946 2.7922247426929653891 -5.5566175491762015426 1.1739208714075102247 -11.765612289009943936 -2.4664151587682918709 6.4947900331576082777 3.7108046275531063607 -3.2552729779282820743 0.14336703245390391981 1.4628016031437851563 -0.69403264358986349603;-7.8776371829081153209 -2.015600567720969849 3.3597098489931225274 2.7296963604670025916 0.26019681784891313114 0.62516009915931103347 -0.86684568503755921043 -0.72020032887545837319 1.4724828293029141868 -0.8409517761649838441 -0.52342828461237256299 0.5371761923789429849 2.7296263423397184589 0.50408357237742973389 1.1318941580694836802 0.66441091936482410407 -2.9286103694004053111 -0.74913405558616674718 1.2278619464163356145 2.7573873193362112843;-9.4809976102805784137 -4.6249969106264252616 5.3919775804278256004 3.1692826420975594992 0.50974271646177515827 -0.97444863704332418397 0.99763233909282189593 -0.48977369187668473582 1.5185512354735639651 -0.3583985076939785186 -1.2796806039549275535 -0.23137265804616458098 -0.80691385809106608296 -2.4533010025517500985 1.7996214738178815118 1.5570416102275805859 -0.29569510056620290639 -1.1936037770556551241 1.0572135547469423411 0.67120296634309284389;0.12189236590113058933 -1.4866854708776853222 -17.468440056946011651 3.8312193627598687407 -5.9581895042358699044 4.4833417019239689694 -10.339306931641383258 -0.32502460244873360162 3.0219669005453186905 -3.7793785714747745175 16.899434237488637933 -3.720362623025658344 2.6253134050870334804 0.0048845624959332600151 -1.7291354867313193377 -0.1494260312840281768 10.257947550548392357 1.7771316025923953319 5.8418327370882403571 -16.213270588668326155;4.0750314859121639088 -0.23763654676826967416 -27.950527103851523947 11.093555053206832994 -1.8723430543471917264 3.7851049430070196067 -5.1002712414098452243 -3.8040024120520548045 14.927877228796106124 -3.5792774625498888774 4.6670577187040249711 -3.9691036523520626389 6.418846009914831896 2.7731701681947584781 4.308866636270838768 2.9690994121143883255 -1.7867943267910748606 -0.86728796097695803891 0.57522751447411413217 -2.4195363134700444974];

% Layer 2
b2 = -0.76367707873834500543;
LW2_1 = [-0.3324902784662632782 -0.92666424125587576466 0.57886345241149339547 1.0921575043077162981 0.48827243396121899899 -0.33995245239451105101 0.10733159253068862149 -0.48757881508493472467];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = removeconstantrows_apply(xi1,x1_step1);
xd1 = mapminmax_apply(xd1,x1_step2);
xd1 = [xd1 zeros(2,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+9,11)+1;
    
    % Input 1
    temp = removeconstantrows_apply(x1(:,ts),x1_step1);
    xd1(:,xdts) = mapminmax_apply(temp,x1_step2);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4 5 6 7 8 9 10]-1,11)+1),20,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 10);
xits = finalxts(finalxts<=10);
xts = finalxts(finalxts>10)-10;
xf1 = [xi1(:,xits) x1(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
