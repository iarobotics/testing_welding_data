function [y1,xf1] = nio_d10n8_r5(x1,xi1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 13-May-2019 15:15:02.
%
% [y1,xf1] = myNeuralNetworkFunction(x1,xi1) takes these arguments:
%   x1 = 3xTS matrix, input #1
%   xi1 = 3x10 matrix, initial 10 delay states for input #1.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 3x10 matrix, final 10 delay states for input #1.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 2];
x1_step2.xoffset = [1361;56];
x1_step2.gain = [0.00110741971207087;0.0176991150442478];
x1_step2.ymin = -1;

% Layer 1
b1 = [-0.45477969159859149562;-5.0787954589124408855;-4.7264664991290832319;1.3102703444825938295;4.7058881217579129341;-0.093035979240808960866;3.0847524060401863011;-2.6782492445337404696];
IW1_1 = [-29.092608481310406887 15.510299017724920034 8.3499239428316549549 10.885212140524537006 -14.154327615755331493 -4.6691122602715280365 6.5729586011076674978 -3.7310321962327002154 8.0378815818551476724 -7.680743015295820264 -2.8580749307444599516 7.5758067623442224559 58.681154569206675831 -23.2896448518953747 -42.051031465547929145 6.8655762823394397287 1.8443175884737001979 4.1022210514388488534 2.7106743193834379468 -2.3156499235775447332;-35.028589187754803902 16.523591573276053879 -35.636972092974922077 8.3501574464968939537 10.392130241199026841 10.635337318920274896 23.216678244100869222 -8.0585126621779838985 28.970969192032580253 -6.233297400765266616 25.929175291791139557 -12.763910886479065354 6.0915240522012314983 -4.6473494300056747974 42.841516853094681494 -4.6704898937047039098 -29.999562439904867261 3.3108452771068730414 -35.86308191106647314 -5.5718614587998152032;-23.263717814361246639 -3.7718060085782973978 14.29231161249693649 -0.64163218905931229674 -7.2003354697377259797 4.1096332049447257262 -6.2633676036407432974 -1.7030898378736969434 19.678962386862540512 -12.068808917004741232 3.3874382326406276 -6.0759920875173261123 30.081668130506180603 1.3690221886953068964 -22.163517005714673758 6.4438089991465545836 -2.0315420444590110982 -4.7688888570975196401 0.012576573790472065154 0.39001234252022898286;-20.745485182816732816 -4.3314545472583274588 -0.49764601724810986205 -5.2081149128438397611 7.8681577727694307356 4.994750426371124874 -2.4281363085980975924 -4.6502703701819552151 -31.197366999298139945 4.2537271865615577937 8.827617459681938783 -4.8284495921846346533 12.007047310526839823 1.1027458270822279029 19.08946741577890549 -3.3771902134683098318 -10.259940706998216697 -2.631446387216514804 14.532413415026361747 3.0781790390108292321;22.919543595443357731 3.7918863078676947609 -14.124167700667166869 0.60967347132591087622 7.1285940702876011699 -4.1900165302465373074 6.5887334051259056622 1.7101427044978132486 -19.795451180804437996 12.318857716428105675 -2.5725232322485624969 5.9148779694189839162 -30.847971430231428513 -1.3255452172509774034 22.133113740610362186 -6.4035602867616887579 2.119295408669578773 4.8687272318156677997 -0.19192610152268244073 -0.53728374713883508829;12.001046655660390527 -17.876562746144333715 31.053619447274833476 -7.2406640817838239244 9.127627167775687056 -4.7308571800457892564 -22.636208053011291241 8.9799566184266463864 -4.1423630676172820131 8.0713615199743280471 -6.9040050729657256312 1.4207210553516120832 -17.244884900310175624 4.6052039107264617357 3.9279136438653461383 0.91117340411874858663 -3.9256723248392608738 -5.5198798434281890479 2.2974306950442002773 5.5416278074004754473;17.118090546268245333 -3.7765618082749297102 -4.0280613138637733073 -4.1762871473911138409 4.4602410214521501786 -2.8893342695794084207 -1.8461876373295673659 0.67035083027845610015 -14.151836724886299734 1.6244577288447685781 -4.0167144818817464014 7.8149589308777720476 -14.394452472308152835 -2.641519962333126692 5.1930622902749465908 0.58481447083944593235 10.796913845978505009 2.1447134501678410956 2.6228326394077532413 -1.5760711338611106402;23.210202766571068622 -11.167628381375177327 11.872291519721301256 -4.9752593090050449831 -5.5757869963393673629 1.5510409971760656944 -12.543773424781482717 3.4755679274642630183 -3.7299076283775240981 5.2795569664531889487 -6.2625450749650157789 2.9609304898956469998 -2.8535114182182961251 -5.0785884815795139247 0.10094337810576657632 1.4952370899548657057 -0.31127431354892487469 -0.070961082486629009636 0.094802048043403211453 -0.77696571040698214627];

% Layer 2
b2 = -0.67678099127818902581;
LW2_1 = [0.50016098887217308455 0.68449970237203772161 5.711880578853878454 -0.31804151240524758393 5.725083607406827646 0.69534351749052958347 0.95380501482558355253 -0.46612299064972756435];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = removeconstantrows_apply(xi1,x1_step1);
xd1 = mapminmax_apply(xd1,x1_step2);
xd1 = [xd1 zeros(2,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+9,11)+1;
    
    % Input 1
    temp = removeconstantrows_apply(x1(:,ts),x1_step1);
    xd1(:,xdts) = mapminmax_apply(temp,x1_step2);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4 5 6 7 8 9 10]-1,11)+1),20,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 10);
xits = finalxts(finalxts<=10);
xts = finalxts(finalxts>10)-10;
xf1 = [xi1(:,xits) x1(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
