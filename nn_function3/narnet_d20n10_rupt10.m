function [y1,xf1] = narnet_d20n10_rupt10(x1,xi1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 11-May-2019 15:36:49.
%
% [y1,xf1] = myNeuralNetworkFunction(x1,xi1) takes these arguments:
%   x1 = 1xTS matrix, input #1
%   xi1 = 1x20 matrix, initial 20 delay states for input #1.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 1x20 matrix, final 20 delay states for input #1.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = 0;
x1_step1.gain = 2;
x1_step1.ymin = -1;

% Layer 1
b1 = [1.6669389944740276022;1.2890125342178158085;0.99451417275773035254;-0.21796479438751578672;0.43570472945163590817;-0.2305290800858078859;-0.36131008373289946745;-0.57248540734799613361;-1.2904296735989424505;-1.5342575322681650807];
IW1_1 = [0.31133838425473980838 0.71124669486067892965 -0.18544228024342448991 -0.19518129000716247234 0.13574543726521315357 0.48325465978285003787 0.13662078503595728729 0.27613973877818404068 -0.427247861565538678 0.16900827198056714296 -0.21044885383582759286 -0.26527769127047401421 -0.29641877099973129583 0.40208248682043024047 0.13883953146455876859 -0.020931215802809842452 -0.19000965901649635725 -0.32703158095819812035 0.47680156553300390154 -0.58045553187841092413;-0.46413874558355766586 0.21089603575553286796 0.14737399716430343855 0.50287052180599156603 0.19895479977722990705 0.45909821334798184278 -0.090585484680472477814 -0.14988934729759390008 0.31014465235831301104 -0.68975324735162168999 0.49710167841978175618 0.2308252478596313495 -0.66097775397030711364 -0.70401186517686420441 -0.0089079662977427295778 0.35027354482601269492 -0.13544349064712007946 0.28404068735309917493 0.29947232371606424817 -0.016622910694852437163;-0.17854466860171230858 -0.19680019906167597887 0.25194816763009791893 -0.44084207180317247499 -0.15883588112113602997 0.51998200168273389643 0.31642650884906609043 0.010705397854361786356 -0.32353212588653507131 -0.64110941625142703337 0.60866353159596831013 0.40071209469196200637 0.41029251475625050372 0.13997724099154049138 -0.10058627631252825552 0.46868919256408830831 0.081884677983448186933 -0.12415177328814559765 -0.34375036225226440756 0.0098679284106757015477;0.99330443124863054827 0.25224133227363831899 -0.047133164416990919188 0.44705563377010093529 -0.23806122148614997092 -0.41296270175876143016 0.21091897920718527537 0.33914944101012195476 -0.10812618721871880556 -0.3292987680496470837 0.62009069875128430827 -0.18303247233354322243 -0.41714284460733203064 -0.12234142066153402828 0.40208960896756046344 -0.31705417514977207727 0.058813517992439411086 0.28906522509408844046 0.33030215100191551159 -0.0094616762153801568791;0.13488922442707207416 0.22138634481624283601 -0.17764439272511611811 0.35804021819827064332 -0.11369920033575472984 -0.35703866348392049312 0.49882105777712243411 0.17078748614111205484 -0.31625274226896393781 -0.41702054570768226638 0.14704142291441679724 -0.0032810964393995057688 -0.79245399476310907083 -0.36151328104515340067 0.17856551753313931741 -0.47236198176761096112 -0.65987504550929332314 0.31816187701002818233 -0.77759010431639552507 -0.070652835192486176941;-0.38311245393145082483 -0.051996090489108651167 -0.28303463636878473109 0.036446470684617017499 0.34698988844373596097 -0.21213976470521794804 0.72130967625702591128 0.34660644901476223012 0.93534331911561119366 0.58809691878972047974 -0.004046397649794303622 0.1521670327655801902 -0.12114463414576794043 0.16899617502952146708 -0.4402600545516050512 -0.051587581595079229357 0.17658284148677916292 0.30072233270843384823 -0.29235697045492015089 -0.038858389441534794961;-0.62362256498467161236 -0.38279902535094484373 -0.18378335152339095315 0.12425335231891557197 -0.083823532164575526027 0.23015221913946762311 -0.17485762643252616977 0.44528128780964193467 0.26980473943706123618 0.59071540853387138892 0.25967856608120831741 -0.22589406582403667723 -0.45861422251000555361 0.43139615486009547096 -0.53672657552851554819 0.49671561096549721182 -0.38895918841302962177 -0.23062668903904412487 -0.2761481620215692212 -0.46126456853873792907;-0.5643134399805423973 -0.085543979150311588722 0.21662860883019927072 -0.17014844603849285654 -0.08661051585192547364 -0.19520322192342487444 0.47634545200295214107 0.40787590964542053129 0.080649400910932561581 0.87533700388255075708 -1.0461592714290912642 0.01886179810508546717 -0.0268522197524892689 -0.1750392811513989122 0.58893214802899851446 -0.54128536878635147289 -0.1259024183314584322 0.18506530207504964802 -0.38379708608819979032 0.0090450600361802798582;0.32786541667945839906 -0.46470136556085739343 0.14747725663870239754 -0.094934051833374014095 0.53065933296970846378 0.31469137905545363498 -0.36538932547167823905 0.1997820131973669644 0.10513006672361378813 -0.62866709415758204038 -0.49509704398687814919 0.35354810251744850369 -0.37500160307229468692 0.59922742142401663745 -0.16424898529939419012 0.36086035787172515699 0.34160726425266296769 -0.39370109791890584017 -0.29388932978498805149 0.01116635837632542691;0.41528220080343597465 0.090507222802198042388 -0.1657939377698557093 0.46789100260610022586 -0.2421832115172128097 -0.49577144146623558507 -0.6500763434786775985 -0.40357552897016651938 -0.4696860004527960708 0.17277446266993126689 -0.42543808723045323239 -0.086153877599513317698 0.34047199758227864042 -0.40819116768775021153 -0.46063737031026086299 0.092562621310255055462 -0.201426684404381523 0.34836941784392938537 -0.11019129466661796435 0.0069047591722415525145];

% Layer 2
b2 = 0.024882564951580362494;
LW2_1 = [0.028816700777883046819 -0.35644581848464551577 0.60345481568692871388 1.0303115994518441401 0.6608030744769315401 0.3656554782872439846 -0.025675015653211837735 -0.8523360903773705699 0.49476158352723886846 0.20642514587584720465];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+19,21)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20]-1,21)+1),20,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 20);
xits = finalxts(finalxts<=20);
xts = finalxts(finalxts>20)-20;
xf1 = [xi1(:,xits) x1(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
