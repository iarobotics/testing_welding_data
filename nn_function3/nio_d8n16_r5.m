function [y1,xf1] = nio_d8n16_r5(x1,xi1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 13-May-2019 09:45:02.
%
% [y1,xf1] = myNeuralNetworkFunction(x1,xi1) takes these arguments:
%   x1 = 3xTS matrix, input #1
%   xi1 = 3x8 matrix, initial 8 delay states for input #1.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 3x8 matrix, final 8 delay states for input #1.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.keep = [1 2];
x1_step2.xoffset = [1361;56];
x1_step2.gain = [0.00110741971207087;0.0176991150442478];
x1_step2.ymin = -1;

% Layer 1
b1 = [0.40010801221826586271;-1.1896147280722479955;0.40708756553642377884;-0.21005484942347915633;0.088202850426854564891;2.6314789174578980813;0.20051107027284179041;0.17094873030769436317;0.70261672068835345772;-1.4518414083582653618;-1.5011042837003243378;-0.42197538058651690163;0.46154775595776675878;2.1921110417005431614;-0.72559255309486836438;-1.2099590909218476131];
IW1_1 = [2.3174714109674590112 -3.6590989032422931437 9.6731824392080110186 -2.3253987643857407797 0.092522226627381035091 -0.45041353643161324838 -1.1262936476575002853 1.1851712858197946954 -5.0266966273466762161 2.2842665732431441938 -2.3148963649322680247 1.7646093939070093271 -1.1758819466620828997 -0.78185917252447190151 -2.1843255748170116171 1.9101233593201332184;0.63440046435741592745 1.4628744398274116101 4.3298262157034566044 -1.3279792754053214576 1.5794545367472536679 0.42122819866003813338 0.75444757358970948591 0.021233547261582271654 -1.9020518998362578866 0.94954988401296158695 1.460854153797238375 -0.50789384846829421782 -2.1455247565955466449 0.24279137175239667856 -3.6990464172240744567 -0.24822177908844425542;-8.155806316161971381 6.7454102062184828625 -8.8130329440559727061 -0.24332004500845089145 2.6650590087411920592 -0.36186501766107848077 4.0287913667700081533 0.90366399006370634606 3.64762776149613277 -2.2813047203518035388 0.11029838469553751579 -3.6446630258793897283 2.3453118640558328067 0.66313944593136020522 1.3476395042007613956 1.6223884844736131683;-5.4649517213055309739 5.4841094498494395992 -9.1908496999264226446 2.3060675158688757058 -0.39632090899925503935 0.37054016133365696994 2.0137739812434500841 -1.4937959285244399865 5.7234079731523674894 -2.9387531383164842147 2.7677178135884297205 -1.6430006745242831112 3.0899309787575983677 0.34064439799716333956 1.267076659511786163 -2.4826200295111431338;-8.3244665561700141865 5.5049763266196753975 10.030234356380567817 -3.9480369911528314653 0.33402612159066108477 -0.56046547618757702747 3.4540970717152226221 0.27289648761094520424 -2.4556257585249574582 -0.43964033053074930146 -0.99208343678566224266 0.95389727113927180735 3.0192177749381725604 -1.0722486903503578581 -4.7660421383073465762 0.041151606690944225742;14.100195358207392005 -8.8216264693250572293 -10.676771797440842704 5.5090773100221142045 1.1716321973649541643 5.2232690528639906802 -10.729026559291275689 -0.47073409287547535174 1.3014051370528949558 -0.86906400342171197249 7.0837292560428046784 1.0001115318106814644 -5.7727707012010585075 0.28340698510561335155 3.4952389153015852585 -0.26958767531389987715;5.6712994728197623218 -2.8299939295532947625 2.3133654798655989282 -0.19491142316652593225 1.8023261731251587481 4.1846234895116101171 -3.4801130212896040916 0.19607091410642893403 -0.065958613495454218589 -2.3723708736908690753 3.6419824009972487922 0.73124453034379122141 -10.107665340914449459 4.5432829407569474967 0.11253888097716589767 -2.4953816566363693497;-19.219648886826870893 11.75379440683488852 -9.0526389228652721641 5.534004506478247265 -0.72124739694780293231 -0.1237496067431142488 4.3506871923031233962 -3.564046388963228118 11.058528540565658815 -4.1190607467535569342 5.6213021771271458604 -0.9450093980208755795 11.034710271295125494 -4.6879528680029327603 -4.5474488590924906362 -1.8425592314708896247;2.9945737464027137875 0.076617053476523130917 0.65221579881530522549 4.1467045456724962449 -4.4406417411106913207 0.83063094702060813468 -4.1867343392654445822 2.4873366449355795993 8.7431600890897449574 -0.29118632610242617398 2.1166137395255897324 -1.2361279569604208817 -3.8508567313495873918 1.7357143262619965096 -0.13673279579109870463 -1.7188001777235839551;0.80703619724327346763 1.0450906827803880805 7.4381858689149806807 0.81547385463229549174 1.4006874663157271588 1.5159543832060951019 0.69427133956752218324 0.38814159260179015298 -4.6707514756158392544 2.6131776541588180862 7.8539294904962835275 -4.0499992208874475708 -5.0627014879631850874 1.7684879826783908019 -6.5000141187274751431 -1.3528049572097831099;0.73889165350607854954 1.1051120686003197413 6.3414114428284991121 0.36234456366013462203 0.7056459175924063576 1.1695754910334161814 0.15406121762749669379 0.46000733118117537179 -3.4174601565965279093 1.7993283517726808007 4.5313671761348173206 -2.4989538044245818149 -1.8273078285546835442 0.76808035932706697491 -5.5007255211078236457 -1.1442555655108961332;-0.66992100892045025606 3.3200981186938016698 -10.82827950338687728 2.5477801392987755591 0.35541307701984287126 0.39390544879297012537 0.92954691939518685473 -0.94215642232897633956 4.7419608553207499568 -1.8261020345383678354 1.9158019856347576759 -1.9376488252640629018 0.6174811995533008302 0.54940094963069752154 2.2857513749048692375 -1.0734082546712813144;3.7834889618999998362 -1.8572223751334324682 4.0685664875590239475 -0.84275064762553364428 1.6952711035507115334 4.1514362984346613317 -3.3625064700740048274 0.28854195481298205994 -0.12077732817006733845 -2.5357623670052351628 3.4524711023203633609 0.85798330309940762373 -10.009181310590108183 4.2742426890822313723 0.24109843966827110284 -2.3319939216634515411;-2.3557086467675163455 -2.5327263381967717315 -2.5923751514449069333 0.090156265085326564579 -3.2199591072648670043 -1.0998604331929255906 0.34575536527285638533 -0.63774638848835984994 0.88272728370746911253 -2.7444572768379749128 -3.2769995466102836978 3.2217343741420680914 4.1264702571444553669 -0.95183467322059522875 4.639492152169664152 0.97875511111873791936;-0.81486251332271097958 4.5753382301358787032 2.5103110763863751842 -3.6964674825138645886 0.69240414944082906423 -0.4437071025756553766 0.59244573147134571567 0.90876125195986723337 -5.161541317016302699 -1.3844044649797839774 5.1895550547562372401 -1.6588859207335697743 4.1193722733935267399 -0.016864201641566399503 -5.3828420454369947379 -1.545806627365744923;1.4927358078367249927 1.9340385684715941661 3.0636701527318006555 -0.77198582213479660652 3.186286902777610397 0.51732927098546033218 0.59454609066205699186 -0.092298267792695148914 -1.2437064348791537771 2.1205361370609536742 5.050644086838103064 -2.043488956265049783 -8.1632647711921340061 1.2612108727682713738 -2.9398295333500827908 -0.41890815322062846526];

% Layer 2
b2 = -2.4608092422403444743;
LW2_1 = [-7.7019752920337642976 -5.650059271840602193 0.69819119544553032153 -4.1944745075460376782 1.4535437155351973448 1.2461824087608390776 2.6844254166833008135 1.0791748728215200259 -0.18072197574048784463 -4.8628015376026203498 7.3946376683584542633 -5.0979643818068760552 -2.6618143399127780491 3.6573190780405151479 -0.31883606819135307253 5.4018023161082906469];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = removeconstantrows_apply(xi1,x1_step1);
xd1 = mapminmax_apply(xd1,x1_step2);
xd1 = [xd1 zeros(2,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+7,9)+1;
    
    % Input 1
    temp = removeconstantrows_apply(x1(:,ts),x1_step1);
    xd1(:,xdts) = mapminmax_apply(temp,x1_step2);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4 5 6 7 8]-1,9)+1),16,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 8);
xits = finalxts(finalxts<=8);
xts = finalxts(finalxts>8)-8;
xf1 = [xi1(:,xits) x1(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Remove Constants Input Processing Function
function y = removeconstantrows_apply(x,settings)
y = x(settings.keep,:);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
