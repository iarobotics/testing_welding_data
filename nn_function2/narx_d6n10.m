function [y1,xf1,xf2] = narx_d6n10(x1,x2,xi1,xi2)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-May-2019 21:52:36.
%
% [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 2xTS matrix, input #1
%   x2 = 1xTS matrix, input #2
%   xi1 = 2x6 matrix, initial 6 delay states for input #1.
%   xi2 = 1x6 matrix, initial 6 delay states for input #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 2x6 matrix, final 6 delay states for input #1.
%   xf2 = 1x6 matrix, final 6 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [588;52];
x1_step1.gain = [0.000550206327372765;0.0045662100456621];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = 0;
x2_step1.gain = 2;
x2_step1.ymin = -1;

% Layer 1
b1 = [-2.415595302701850855;-0.90370818228536753391;-1.5423442700063576538;1.3689478269687531675;-0.15215428441009209992;3.1362994362944141002;-0.60494901532759959295;1.8615169435668537101;1.9564779232924467411;1.8474111961174541907];
IW1_1 = [7.3409614784699863677 -7.7984753253662217887 1.2422095510368862392 0.63764125433984752966 -3.849473677473980171 3.0808371064768560466 -2.6514744157607954556 0.69664148503293188419 -0.71168944660711641603 0.84048975521136004563 -0.8184041825534534853 -0.395887554303232303;0.015477587364427246308 0.53772134562507045707 0.062207101087960854635 0.23538403621760134454 -0.31066153403886603845 0.62947903665862026124 -0.099580244111947630037 0.34989181064949254063 -0.3582595028907493151 0.86219489113425606952 0.044186018425242418184 0.66111486325483270754;1.5389113116394419478 -2.4737031633921997553 1.6321681010899220521 -0.58891732960788922835 -0.92620163732484028785 0.6000396995000119027 -0.62721576515655486084 0.019827020847095078865 -0.56921308613946541843 -0.18015193160004144834 0.060563381543060713919 -0.42073331969657895568;-2.1089377298620015644 1.9156327009426130648 0.40751254498210953692 0.010868040109267116874 0.59257819656786803186 -0.45883132717639268927 0.39189376764751387983 0.00050934515509010701295 0.14455660666338521203 0.32622341601270882228 -0.080066195363761846759 0.098803648628334586612;1.4222040826097028798 -0.81973171219607166016 0.29686070395758656915 0.56975069215739326811 -0.90490436878092694872 0.96872161064167605637 -0.34322328555373637915 0.020754435141098148687 0.081566325506018541591 0.18573669002784035098 0.035448420396520359532 -0.4116592024291920171;-17.734861661655518361 13.310082356680370097 6.3923968475172303627 -3.1848417874387959792 4.762508813293489851 -3.5088313187245430136 4.7125568704242324358 -2.6868539913996101198 0.85704278858816262954 0.48999715124658999033 0.022558786913691265819 -0.14734621724398003217;-3.0568472199800358347 1.605114683374492035 0.53139438005967842837 -1.6970463852136110638 1.3476849627857196978 -0.8481666624616717165 0.62611633377050313065 -0.29052863521798683033 0.14963961919352425367 0.066517669503829382482 -0.33269937258409038039 0.3301127074909331327;-1.3033471934138516346 0.88323449893741423633 -0.18679671603978764693 -0.18652932684787074114 0.85006727623511291192 -1.1667329185545225467 0.18213115251204423095 0.27509801703558323105 -0.38770716161246548959 -0.092307270937263541377 0.22777178294476743692 0.36248215385819582135;-0.77861522125734794475 1.0268301607280776455 0.50451884337531827107 -0.3972827961441253164 0.46594439307881929668 0.080264134061821951205 0.51299543044168383066 0.023167710883198591731 -0.34750326302522988042 0.053457235954267413869 -0.22077104562804475418 -0.09713400222913817772;-1.2221514278823872868 2.6678980181427078833 -1.645285881527356775 0.35284115178197272833 1.2076271503904145721 -0.64282811776799964054 1.0011808140555711333 -0.17798988353097308646 0.45200860576683837833 -0.743198026633787312 0.68001303697882731214 -0.079565330878566695172];
IW1_2 = [1.1075919269363549979 0.23749734299901698042 -0.15148286063077257002 -0.3833754205041091101 0.0054530904993191232216 0.19236034638936400087;-1.1969524467204870621 -0.3115563483677161738 0.46857431384656295092 -0.79073572499226341126 -0.38648239407776829868 -1.715956511826976616;-0.43716468060093499615 0.1490611131314638349 0.9391703177212106235 0.10812679702161365203 0.044505892156033392826 0.44820495861952247552;0.80832436839933274886 -0.2391892212961725106 -0.82051217788745822723 -0.14137590040516873069 -0.060604639390673391286 -0.40139582271011642334;0.4242530975045339936 -0.22851781976630655691 0.62945862732920965232 -0.088588765346635567344 -0.011979872519374171191 -0.31334174611778231601;-1.0429117788513773135 -0.43953556789361691859 -0.10010928336473214062 0.44934076939455563915 -0.0060273841631371064681 -0.18287343490289020842;-1.0524079270395108043 0.13505131732087452545 -0.80168251930765110913 -0.22162930518389797885 -0.16229917842541058404 0.70245037028770229703;-0.10009497345820170255 1.1385998770898628774 0.95454288496474870573 -0.33614666540311133325 -0.038650145274134357909 -0.28664271257300660833;1.5065187580499033171 -0.11397882775889041362 -1.2779039184320484246 0.099048963847499532642 -0.015258667143651979264 -0.98292597492739119946;-1.334526470564587397 -0.016830591419976330403 0.19086579505992917749 0.3543576076319822632 0.068787087871738178402 -0.16342710695232467999];

% Layer 2
b2 = -0.036095292914628235303;
LW2_1 = [-3.8547452430335731322 -0.39702280149773855333 -1.6414674343122253042 -2.3674986450669615046 1.5785795047149977499 -3.1959993177770971151 1.0760306126289309603 0.62477278654406054326 1.0795657181734485963 -1.8318566005247751693];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(2,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+5,7)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4 5 6]-1,7)+1),12,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2 3 4 5 6]-1,7)+1),6,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 6);
xits = finalxts(finalxts<=6);
xts = finalxts(finalxts>6)-6;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
