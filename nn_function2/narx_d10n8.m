function [y1,xf1,xf2] = narx_d10n8(x1,x2,xi1,xi2)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-May-2019 22:21:37.
%
% [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 2xTS matrix, input #1
%   x2 = 1xTS matrix, input #2
%   xi1 = 2x10 matrix, initial 10 delay states for input #1.
%   xi2 = 1x10 matrix, initial 10 delay states for input #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 2x10 matrix, final 10 delay states for input #1.
%   xf2 = 1x10 matrix, final 10 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [588;52];
x1_step1.gain = [0.000550206327372765;0.0045662100456621];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = 0;
x2_step1.gain = 2;
x2_step1.ymin = -1;

% Layer 1
b1 = [-2.7003793041549890575;1.3511892365384881032;2.2911962961627945212;0.66700366175052394624;4.746488201329561285;-0.62296478935962018575;1.550786968580829539;-4.954021425231475817];
IW1_1 = [2.3665970274771090942 -0.8649713412979949112 0.40424471210915363661 -0.076713015262312195253 0.50642864990442115758 -1.0092031163665802218 0.74396006627295319102 -0.8530425861181392122 -0.68399035213917680487 -0.34275978285668312617 -0.49635834727197941652 0.80578558996456994823 -1.1836699166406527972 -0.23427824715791373267 -0.06208837054531244487 -0.86418137590458676822 -0.47464694923730743614 0.12123243996081664586 -0.36533615617054093772 0.6195931780421042312;-0.4262244340401031284 -0.40583861144680394295 -0.64280068621640940041 0.19613754479668144004 -0.31984909927765453608 0.15148457031896936376 -0.11769754576259570944 -0.043567667525405646967 -0.63824107205419966515 -0.17518049127456453151 -0.56308205008381961854 -0.30766425741479519473 -0.65118778575984770374 -0.20057755136759541914 -0.6718527929767322826 0.034822610943918946846 -0.095580488519354356303 -0.23231387670534273115 -0.42567711946010683421 0.24301486897380966679;-0.1731519200946726178 0.040362365916244286046 -1.4525213772497960196 0.23169230090605030803 -0.61579883580034844304 0.63405835691941769827 -1.0729356596581474115 0.90379655176955464579 0.59469987409936042599 0.49304664580509044436 0.36529711838293899007 -0.53112341362849613269 0.052899996240572753903 0.2579791604901031099 0.55708472963495270225 0.51624249098671115554 0.77430019823115092681 0.019281959840288950825 0.30788547047618269881 -0.53222028820167510688;-1.0647154147964150717 -1.5358508108338422282 0.8876964683810900647 -2.1096216011408817081 1.0919762570597404405 -1.1131101936084986104 0.14125860427582287437 -0.30319702522104274856 -0.0066381066234439609075 0.32430107952355563539 -0.031778812693806897383 0.014427771859320294434 0.17967896341943251359 0.43923200016154617664 -0.36706506227072416282 -0.25291472384915419935 -0.59682276216460961038 -0.096491673918407405708 -0.14455498928481511078 -0.43856366511814925957;-24.288504583544114013 16.379591665645055087 9.2239325816727522067 -4.2081646908721737077 6.0050870647237584166 -3.0182438531266004844 7.0504635909473849509 -3.680259277369287485 0.5429681300583993897 -1.124300112037717847 -0.45221540130973936211 1.1252648889109841956 6.0606630278538311529 1.7522070682887569415 -2.4986375822559412363 1.3142373570389216386 -2.4195334043675087443 0.044298455690533034002 -0.88198789368973085079 -1.6499907060453162799;-0.29420628514763802475 0.26391020063138198593 0.78934942795397189386 0.48038459362461555235 -0.358283608588397251 0.76669982681439519112 -0.25093179524896630506 -0.20762641927840377876 0.068649454652944974509 -0.72059973213210515297 -0.11496794276321933848 -0.60309046895454443415 0.30569528290794284464 0.063302777478758703866 0.48378504008813733028 0.7898029420845731341 0.010598466261267083452 -0.021115443492399459113 -0.11635087423927392702 -0.12103545105082999522;2.1503984757577470077 -0.82150525563234944038 -1.7228336725884545455 -1.2732382632104966014 1.3983483334597019976 -3.1062702158017740928 0.90538984147370127342 -1.57340761305224075 0.3819611516055381184 -0.49274977137896236457 -0.35814176741551029259 -0.086862600742565396206 -0.53986830702193910891 -0.18989406844163225774 0.085166067238163375985 -1.060727843275899307 0.34579739890883220976 0.62129262424403652876 0.096875787497049101193 0.72357268914122041537;14.529609508129222917 -15.494859774894857551 0.6083664357845149917 2.6371267269133631395 -6.0619235881479864858 5.1407376528683013106 -5.1831388414454444558 2.7143332558734858395 -2.1129360562683023872 1.4307543853234547804 -0.1844695935496631356 -0.8464412388303461654 -0.24406528169560232078 -2.7678485097428948691 -1.6866288325795173453 -1.8226974463140925842 0.85141717004569084093 -0.85636226302844564717 1.0530332722358364261 2.7699156293080910984];
IW1_2 = [-1.8453858853374580651 -0.65169361195872566039 -0.16730021485554597005 0.43066648740874008405 1.6666981752231484482 0.084839546655690059596 -0.031021821720022116353 -0.080576906809806114751 0.29567334524892990855 0.028884349509508210063;0.20450982026996772367 -0.39725360121712222083 -0.58379113475744781603 -0.4720952621593930143 -0.11657814005806395319 0.42624955389486557378 -0.4624005874622311163 0.40618190107363616459 -0.073696955594658275501 -0.082571949233144315006;1.5407092192285150034 0.61674104426205211826 0.092022077709806957002 -0.38160105046224673808 -1.6565398801595487832 -0.049391091533401466906 0.018248821102740366701 0.13115860436734930183 -0.30182843874382364602 -0.014891463229506499491;-0.63709791191783982089 -0.45889893168645612409 -0.26870012742370075198 -1.3585374391727587096 -0.20590063429084251578 0.56684209156802778384 -0.33023884179507956294 0.4256723712711734664 -0.61403389929469476272 -0.06522514622301164855;-1.7909960876769988047 -0.13942095775548110637 -0.41337963239333636034 0.5714706985636359704 0.0063513758569862452386 -0.070590181936140999897 0.096566537171784358473 0.39170199102171204819 0.050664181765331460505 0.10163664116213301514;-1.2209715683120274665 -0.39545178433748351399 0.20517045060070973617 0.62433962003229181992 1.7776005623666126798 -0.04505897091132409632 0.054649672185770013788 -0.25893382088273059205 0.35219841816510544241 0.0032843996116707512879;-1.2123909690206473577 0.029659036956475919034 -0.54884217347541652821 -0.52992975380476203817 -0.46656668038075382876 -1.1428207512267292145 -0.12041634852166867298 0.27275634793642627995 -0.30292771127304357615 -0.49954074861658664952;1.7457435564335497258 0.92539354024262165943 -0.53642926305705596057 -0.50621383497788996486 -0.036426856068574625658 0.073069391446988249395 -0.076999133825773294348 -0.46501489461313594287 0.033159875239140698677 -0.16803581906923908962];

% Layer 2
b2 = -1.0158335414407555497;
LW2_1 = [-1.004152427670129244 0.0060829766496758334512 -1.2308595879567094666 -0.7149679567880484754 -2.6594765819187591305 -0.22877275248958628406 1.716157645247490704 -1.6655181164210934863];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(2,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+9,11)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4 5 6 7 8 9 10]-1,11)+1),20,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2 3 4 5 6 7 8 9 10]-1,11)+1),10,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 10);
xits = finalxts(finalxts<=10);
xts = finalxts(finalxts>10)-10;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
