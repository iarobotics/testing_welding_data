function [y1,xf1,xf2] = narx_d8n10(x1,x2,xi1,xi2)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-May-2019 22:03:30.
%
% [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 2xTS matrix, input #1
%   x2 = 1xTS matrix, input #2
%   xi1 = 2x8 matrix, initial 8 delay states for input #1.
%   xi2 = 1x8 matrix, initial 8 delay states for input #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 2x8 matrix, final 8 delay states for input #1.
%   xf2 = 1x8 matrix, final 8 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [588;52];
x1_step1.gain = [0.000550206327372765;0.0045662100456621];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = 0;
x2_step1.gain = 2;
x2_step1.ymin = -1;

% Layer 1
b1 = [2.1036280427984945796;-5.0477977397057802733;3.0683378903425801987;1.9106135174142218069;-2.343853696989084856;-2.5933929572912788331;-3.1933537097234263591;4.6620074719595088197;-5.4993541030949293358;-0.98340845572195012547];
IW1_1 = [-0.44710883167839271524 0.76045940669755873742 -0.097573398115892814864 -0.26835491774712294522 0.45946798526852306033 -0.29939026948739250189 0.45497627303591858805 -0.23961370492904601748 0.15234173724120703142 0.090276386579330292204 -0.42079205621707693741 0.12838688095048836346 -0.02610487524411096022 0.026302459696255924698 -0.1182583275322526134 -0.071291641601270286377;9.2145441462140755817 -4.3303405702687793877 -0.40085811638377361055 -0.046294758159076423998 -3.0803005548299253746 -0.69395340827408513729 1.5950193367564258207 1.4288842856420687077 -1.5262638203430527462 0.78682035219647228352 -3.7335101610830050411 -1.5375959479758452009 -1.5433296950257571201 -2.4913364358942016175 0.59599324263731134899 1.9917910067872222069;-0.65640044265011809888 3.7145321022342199235 -0.35774386616021008889 1.3042530903481412974 1.0740725772086348044 -1.1010450651169654268 1.8839011871347830507 -1.1123220240836924066 0.97630922622662086319 0.88388483952465912719 0.99010502576862502444 0.37199911092549886593 2.0671883271908053636 0.91003539949922296337 1.4304579431970911862 1.5845551062794864805;4.0168700764169225081 -3.0033025758279423556 0.1216979100705750938 -1.9538663020033062434 -0.0075060267388621267071 0.9399687081752104989 -1.7004442565670754295 1.5989572077428797492 -1.6499669677800270495 0.58065463704503761377 -0.62368292491270704847 -0.927913254674823329 -0.06057389473828470039 -0.96054486339730715816 0.5799721554852262928 0.60690052389033888325;0.10600242480828700464 -4.7264138394716246339 2.8363880084806742943 -2.418103550609407737 0.69342052644586948951 3.3401653084381446313 -3.1961380248770416834 1.9043738514406352014 -1.2980284080410173786 0.72771910587591615016 0.77878418700304918865 -1.1645495405295980262 1.0359439077688989972 -1.5632886822987757114 -0.41961606888821095795 0.89925802631788920305;-1.7122963249275198194 -5.0024626539186174412 5.9730197304674543801 -1.8195881353634608679 -0.070927514570003430405 3.5543300858553834587 -0.68418864062051920616 0.87418111451438818005 0.21809511536993386738 0.63077637451678114644 -1.2340957392053051311 -0.5004145396953626479 -0.37271545777291548163 -3.2444751303215761951 -1.4654948633228706001 1.9748109256542911716;2.4049641706153197518 -5.4068367180680185768 -0.19992880928194309287 0.34489265764634952083 -2.501749558537022633 0.43487140267998936061 -1.2094449106168621011 1.9015531461978187888 -1.2457812784529282979 -1.5015680614676483184 -0.68496150599517136026 -0.46793666030879443873 -2.8214207917841176432 -1.0490490295758627681 -1.1632921831854061701 -1.067788849925296768;-18.302089361439463744 15.511642537467043468 7.9966085834592632864 -3.4703615947244204065 4.4690323342821294261 -3.4048594156331395411 7.9582619866175079437 -6.118889444580842607 2.6446075000175337522 -2.4286121381038614508 -2.3407954338457512833 7.4092127685040258811 -1.0665408282878878765 1.5943242079971899905 -2.61796888016744278 -2.553720121279354327;31.661705430283518581 -21.64464228927682754 -18.760330536312945782 7.2929659031568281335 -4.1764269186311331339 2.670685617268439227 -11.898741576800707875 6.9711488668532277657 0.38781384966903947875 3.4920416843457364742 3.4350084810432872651 -8.7281862692060929731 -6.8104163026154465044 -0.92657297503121138771 8.1003104404009409478 2.8068478895873667511;-0.70032179679936434891 -0.80183337992952097295 -0.29723214057162455903 -0.10578662977976417692 -0.11365077032677281532 0.45232903177270089579 -0.57998863942313094721 0.31985601061687929381 -0.29746682006163222001 0.37730143940299976091 -0.21838355696271449791 0.32528055537068889524 -0.12711009182101171144 0.39937137350625789844 -0.11451094061556385539 -0.37365504915563896304];
IW1_2 = [2.5376298829807439894 0.031465389728331634445 -0.034013057754321313064 -0.11959987136486439907 0.054229180104514725091 -2.0843568264193956807 -0.002913806551433670549 0.0028828811218660713861;3.4440246973988228874 -0.45812207120095455037 -0.36625123672306825195 0.40648517113158583181 -0.31805337900297547815 -0.18032531905280663187 -0.03332173986831681034 -0.26200033879270478998;2.0110316255675102504 -0.5443092449475016581 -1.1520302489649685285 1.0906953941006132247 -1.8960043806377802067 -3.2295090185500177071 -0.89320854539835459196 0.42407459556218707331;2.7017770326071395282 -0.065960378287599361058 -0.1742793114684117739 -1.6662313281015601607 0.22931776924103150495 -4.2559328267355072128 -0.18987479267925741477 -0.090622201875288299622;3.8539129032821346499 -0.021223690230308133592 -0.45311323076455617409 -0.10879775502728601666 -1.1291195159947988724 -0.52602829649187987648 -0.34117132635626540305 -0.112676973538497191;2.7356489680021827127 -0.72572372116724648272 -0.41049090907742846746 0.69198596019284785985 -0.40583318681051100407 0.042677044886152155911 -0.24355744722246172596 -0.22258555931768356229;-2.222472001086275295 0.54954043533220753304 1.2033604004742022298 -1.0922341441765259784 1.908384871400887528 3.2436098689985666255 1.2343959786403411183 -0.6700294485499609376;-2.1072255819390663945 -1.0610009743395754089 0.77505919966153136169 0.32873041804760838591 0.34126757939783458617 -0.19304543257581591176 0.21326797432232155738 0.4799004946541628458;1.8399715356809160927 1.1662723469779734398 0.030457466414240991215 -0.86388248205763140675 -0.1826160652238356108 0.26644402255980775829 -0.2281950886082320662 -0.52033726627606513571;0.29266207550791140113 0.58686094446132519575 -0.0048214719617356918691 -0.083585656277172903916 0.31393054584367552362 -0.45124395533716349371 -0.3657039285838205589 -0.94246848709607267125];

% Layer 2
b2 = -0.008600527583871496462;
LW2_1 = [2.5014747337827869522 2.2596950282707513047 1.1949949820113647814 -2.416025970262849043 4.2847922258507997739 -5.5900261618416999809 1.1900754824640551455 2.5926783646245183945 2.5690441609732785899 -0.0033915295399317103506];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(2,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+7,9)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4 5 6 7 8]-1,9)+1),16,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2 3 4 5 6 7 8]-1,9)+1),8,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 8);
xits = finalxts(finalxts<=8);
xts = finalxts(finalxts>8)-8;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
