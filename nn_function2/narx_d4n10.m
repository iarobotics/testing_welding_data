function [y1,xf1,xf2] = narx_d4n10(x1,x2,xi1,xi2)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-May-2019 21:46:17.
%
% [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 2xTS matrix, input #1
%   x2 = 1xTS matrix, input #2
%   xi1 = 2x4 matrix, initial 4 delay states for input #1.
%   xi2 = 1x4 matrix, initial 4 delay states for input #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 2x4 matrix, final 4 delay states for input #1.
%   xf2 = 1x4 matrix, final 4 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [588;52];
x1_step1.gain = [0.000550206327372765;0.0045662100456621];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = 0;
x2_step1.gain = 2;
x2_step1.ymin = -1;

% Layer 1
b1 = [-0.87425451921251207121;2.083242883754683028;0.25943520454216967286;0.57816227841252620934;3.918852017852002767;-0.4613387330791285379;-3.4727280805762079652;-1.0252637342688655231;2.556736974637463522;-1.5119868762975294807];
IW1_1 = [2.0269257421152122589 -1.1708910703068360348 0.43574125459599444277 0.85465172966758162776 -1.8803508727845188453 0.83435447736470735869 -0.40374899807151520825 -0.0180141363119170686;-2.38245273874083896 -1.9148314175282619143 0.68205189606233629362 -2.1197317071591865734 1.6270266762191236687 0.48066234822746628508 -0.57307166753537630566 2.3109546156704978692;0.11030476902045469045 0.55075297262068245718 0.81814681112561915555 -0.78117899669129731155 -0.33598269118032941805 0.63548368298048385494 -0.48240752450008561603 0.84250202980063204627;-1.8373699499481950248 1.044388414229284523 -0.36307185248101203623 -0.7045945740312574701 0.20232290135260741493 -0.50441771805568602627 0.1329265060780692731 0.39536945480944329923;-21.531713313537938603 15.569538465076321998 8.7610614540989040222 -4.5020087863447058041 5.6650449806457121582 -4.3039548210063971467 5.8397438471216815969 -1.2776790690442376697;0.37063645647775050884 -0.1540356315136796328 0.6659300046389583505 -0.11422062741501289029 0.81138988118252264314 0.24860256752176088102 0.050340362085416326399 -0.1609908303973326682;11.341888594891250008 -11.029828297803645043 -1.276156405764106605 2.3819210847679084253 -5.0917473440783069805 3.7178547845340039757 -4.0580026711896479696 0.29658520004251187618;-1.133822868109239268 5.562872802710064235 -2.6530234469543421127 3.4358749322732959897 0.35650710305395860722 0.12406838087515965896 1.7028841868146877836 0.086983836932444560941;-0.93743403833246041756 5.0942128954234187077 -1.4059225207675924985 0.75826687012266658083 0.77746400308777330324 -1.83320433637312874 1.8104979236755296412 -1.4683992781833714591;-5.9779125209223096249 7.2877130219619026263 0.19087424646427933461 1.2649406631198540918 1.4913928215111162956 -0.11667107072445714877 2.387515372212949849 0.17961699111432113951];
IW1_2 = [-0.015876110597008684377 0.030816344929294060828 -0.14341275989351795483 0.23420386244799457076;-1.2641585448861791807 -0.30069011771505688158 -0.24775951428113168751 -0.26176401781056762852;1.3581950508589439863 -0.21923728923361554544 -0.27603139946224553025 0.18086240455597291099;0.59486295679232348288 0.02958455090092200479 0.62724197373542078804 0.72217610735359005769;-1.6355182809244677156 -0.47812762064960723229 -0.062665305946357274802 0.77999463410259539664;-0.41760479848434300942 -0.074051598590201286876 -0.60197171859693987539 -0.83799078774935087388;1.7604621035342535862 0.27561570837359816721 -0.34771175365557871473 -0.55308946017770643788;2.5194167761852472864 2.0496378522790110743 1.6085934623111857178 0.77866334993395680542;-1.9381885093710888857 -0.041304930810866849478 0.031025559795575551048 0.71355102615216203787;2.9662605488851916391 2.4601928542213680196 0.90792928101028813614 0.63954519738067017176];

% Layer 2
b2 = 0.6748641638099865947;
LW2_1 = [-0.71900082921178443129 -1.9949597560713570044 0.30024207399406660501 -0.66976158811864261455 -3.6226124865899649308 -0.65295012339292002324 -4.9139123041344499043 1.919049913879639524 -2.1401513151075790553 -2.7404580227226014166];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 2;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(2,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+3,5)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4]-1,5)+1),8,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2 3 4]-1,5)+1),4,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 4);
xits = finalxts(finalxts<=4);
xts = finalxts(finalxts>4)-4;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
