function [y1,xf1,xf2] = narx_d5_n16(x1,x2,xi1,xi2)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-May-2019 21:03:56.
%
% [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 2xTS matrix, input #1
%   x2 = 1xTS matrix, input #2
%   xi1 = 2x5 matrix, initial 5 delay states for input #1.
%   xi2 = 1x5 matrix, initial 5 delay states for input #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 2x5 matrix, final 5 delay states for input #1.
%   xf2 = 1x5 matrix, final 5 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [588;52];
x1_step1.gain = [0.000550206327372765;0.0045662100456621];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = 52;
x2_step1.gain = 0.0045662100456621;
x2_step1.ymin = -1;

% Layer 1
b1 = [0.79886112727080837992;-0.47586371347320394198;-0.70009744607452240039;-1.4061936409767734624;1.1583950656335755269;1.1678441360810867256;1.3327625287847539859;-0.47155147229622496052;1.7385642918259256451;0.71891532128850432759;1.7655047284538303298;0.8968889449142639636;0.27124167514556296599;-1.1314742127507266822;-0.52676751041043412549;1.0638801675931743862];
IW1_1 = [-0.72240852771186836456 -1.3775660390527628696 0.79767900514641054688 0.55490361848139657663 -0.81064867464960865817 -0.28346249188670380459 -0.48689774043525974045 -0.25325232932882713044 0.98147431771008253332 -0.053687996975585745851;0.71876170106967385287 0.73115717933918022986 -0.085098783018472498596 0.46733468621830986933 0.19599393350983507212 -0.31103536445628454654 -0.50007834972101794513 0.54521054762036424979 -0.5281118306481596969 0.46717134677756144701;3.9172743963449203619 -0.80079712538646896647 -0.58842861645471911114 0.67726692443491365303 -0.51122577101459276694 0.91382992347145364231 -0.73186382451499265578 0.35875988141963421896 -2.4133236834187181685 -0.80220765035403751586;-1.4086228685748549694 1.3794802164319575066 -3.0748742310979260139 0.091817274587992492307 1.8958165265084321316 -1.2347326485601033408 1.1364311183023048102 -0.045617316617122073696 1.7788578731323525517 0.78756448258311451127;-11.066770471868107251 3.422452300062067021 4.9884679376786964511 -1.785688922134688994 1.4435998995376355669 -0.58114669612593850001 1.0430726835659991369 -0.20786487151843940913 3.1919622875377289262 0.64784376787392650154;4.4906243819530677897 -0.67151429622040004208 -0.62162045438065138825 -0.5280024519983184117 -0.83847923015693959226 1.7437765249644738841 -0.66138200960843385179 -0.31170261111254771169 -2.6228400884404798887 -0.87801319451222348267;0.0023239363908110727101 1.8271068003174477656 -2.2123989284042915315 0.38292386854366244897 -0.57896375586360848686 -1.2209037740114556669 0.86675990623977650085 0.47436297773877228456 0.9348643288419973274 0.29356810125184951143;-1.4376740960834628602 0.39867937338827807991 -0.78151142621608349348 0.11756713500775865799 0.85901263932333971063 0.38995188123391838486 0.56048901197757372561 0.53516347806734654302 1.2121981947627358256 -0.62770013563847537608;-0.73851851748680419352 1.3292999820481006257 0.14036620838799987454 1.069382361003882842 -0.66274329048839364376 0.033337071271470543332 -1.0181369290331743205 -0.60365892734857395929 0.87680310283207685274 0.21096802295623723333;2.2079802763560385515 -2.2660845113521337346 -1.1221010349389830552 2.1214396212285162591 -2.4806910312534640184 1.3659532819656527991 -0.32190512511578828203 -0.39409728333490862129 1.1492617061849599303 0.16384564817536384496;0.32597737234810064688 0.36388230367466112281 -1.0780148416711765602 1.2867970404688640063 -0.10176875977132882056 -0.31924489303134856444 -1.4923653896565045596 -0.14149240129946280553 0.96958710611355558573 -0.0020429067927838985737;-5.0443527379671646571 3.2485598370251023148 -0.71149805640219110359 -2.2372680801918085614 3.1148706248572897159 -0.71527124609170511516 0.75570399207337202174 -0.42757148854699084106 1.7252389078799572619 0.75067905822597225107;4.5199266631644769987 1.4385306745244639259 -5.3651789088919370485 -0.56550553125800151477 1.9929555164029979508 -0.54893046564095371309 -0.095625772311589252173 -0.043585986322514223834 -1.1242919863888010124 0.59609930170395675209;-1.2107627987569029582 -0.079954075751923286974 -0.73967466330967612809 -0.62814355698099677561 -0.40257878406093072776 0.66944338523491075943 1.2168173610016017605 0.13858986216674690217 1.4389112341228575964 -0.019093311865770016406;-0.59664422453634846644 -0.81069690351576739751 3.2775938111440665601 0.91084550865533686625 -1.3919758446245864558 0.20960411746706200664 -0.76652424478782643646 -0.24756474773463194028 -0.80650271692995967321 -0.061017380045276181644;1.0867027057110496546 -0.39472924460996189344 0.49049282753878675756 0.26094843315782467741 0.1618475388558448802 0.38832792782575420443 -0.21845920775848939877 0.0094625454052071969469 -0.75298269444958798591 -0.49131881026427820514];
IW1_2 = [-0.50925227458233912614 0.27557596057326017025 0.70796529867402036018 -0.54515335092172267917 0.25584941692091522913;0.33792177169651815838 -0.047596726654335105855 -0.939228983129497208 -0.2799488633301232543 -0.0051575223066805510677;-0.72237608422579580036 0.51309491063975765091 0.31681110508212989574 -0.016464489929205124857 0.091385573640168776821;0.76941182089503101782 -0.31151075024300328709 -1.8583066323365835526 -0.032539535925496188007 -0.17865684916648877367;4.0655734546459081358 -2.5580065404533556261 -1.300534464178519034 -0.55583847009300024755 0.584262912532454326;-0.64810312870763930881 -0.55322853979247554879 1.7344644787144949394 0.37052675618083896758 0.052378588679544001161;1.9872275786118132057 0.35303754779144302933 -1.3397070911661717041 0.024745162045216498314 -0.0010769527867313735681;-0.067369421532315121315 0.44556059962980926192 -0.1927005417439849877 0.36613625752332296104 -0.14630699686924178438;0.47209290848132146046 1.69228489914632374 -0.63754994811171483704 0.13085020344066985998 -0.19552972872934987203;-2.2343597479954850904 1.4084247932737794518 1.9919683342275693594 0.58165942864570352455 0.47114101580595652008;1.2746932900188356896 1.6876486522310174543 -0.2032546647624806635 -0.51839251876332648195 0.10754893996969323855;3.8685395253713403818 -2.7543484985537096676 -0.82266496476474526567 0.12391708115215911701 0.080681161148316832277;0.99639901111096806918 -0.88427111250774736995 -0.0061824272884376738069 0.065455192712700796531 -0.44181618796679655858;-0.1555733434072262833 0.12254186926139588876 -0.10464568848984086291 -0.11908474638010542457 -0.30587614797894396856;-0.45253987685935864738 0.73808395694747808147 0.098947746642290890229 0.56517299495899009365 -0.27170108189245129049;-0.17907880844872495207 -0.68480524324583502693 -0.8130819246515561538 -0.51595812433109344841 -0.4837072508904777246];

% Layer 2
b2 = 0.73869036705916490959;
LW2_1 = [-1.1493798869294049592 -2.1741363928651615822 -1.8999080426505638997 -2.6877553474003321732 0.70115394300339128897 -2.6014900383929306926 -0.43064727709570221892 -0.53516866594611378627 1.832263469618582663 0.11991726071794621411 -1.6392690063910400067 -0.95178958738806362927 2.4900873064316813021 1.6726771326536500339 3.098201445282065869 -0.19303529818160164444];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0045662100456621;
y1_step1.xoffset = 52;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(2,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+4,6)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4 5]-1,6)+1),10,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2 3 4 5]-1,6)+1),5,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 5);
xits = finalxts(finalxts<=5);
xts = finalxts(finalxts>5)-5;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
