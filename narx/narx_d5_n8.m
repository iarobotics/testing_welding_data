function [y1,xf1,xf2] = narx_d5_n8(x1,x2,xi1,xi2)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 06-May-2019 20:43:23.
%
% [y1,xf1,xf2] = myNeuralNetworkFunction(x1,x2,xi1,xi2) takes these arguments:
%   x1 = 2xTS matrix, input #1
%   x2 = 1xTS matrix, input #2
%   xi1 = 2x5 matrix, initial 5 delay states for input #1.
%   xi2 = 1x5 matrix, initial 5 delay states for input #2.
% and returns:
%   y1 = 1xTS matrix, output #1
%   xf1 = 2x5 matrix, final 5 delay states for input #1.
%   xf2 = 1x5 matrix, final 5 delay states for input #2.
% where TS is the number of timesteps.

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [588;52];
x1_step1.gain = [0.000550206327372765;0.0045662100456621];
x1_step1.ymin = -1;

% Input 2
x2_step1.xoffset = 52;
x2_step1.gain = 0.0045662100456621;
x2_step1.ymin = -1;

% Layer 1
b1 = [1.2495416436503203883;0.38530829917899556136;-0.24736528687521702752;0.82232495946982231416;-5.0122586847337835536;-1.2892012428906538535;-3.5737291073693873145;-0.86455595031375120918];
IW1_1 = [11.699024644038990672 -1.8113833021064280615 -12.536995555511939671 3.9915395964603233026 -3.8981536963164615806 -0.19276262875444363787 6.088676873978690729 -1.5000276378263885935 -1.8812263195698770701 0.67299974434061382578;9.2565618175565109738 -0.98877615938108776028 -9.7870409577533834522 2.5877766787301421658 -2.449081082016791644 -0.23816410265286885872 4.2533681085530199439 -1.2426128155676783305 -1.618932876874457305 0.0094828059785987926789;-10.491622126699077455 1.277866960787493289 11.078073860713022469 -3.3953661270401975791 2.6684485186599142814 0.18377138755858130059 -4.6230917510922964198 1.1621390711110233251 1.7759135382476565201 -0.54115726713082978883;51.679882969154014916 2.2163974305449740676 -54.111178813145535571 -6.8580840265472495787 15.956442928625341082 3.2069863006791612392 3.0501218676100463334 -2.0512547801945824055 -15.583092234463350678 1.6280900071437547361;-42.837187199272079852 21.867982546560639889 32.05909871732327332 -16.464543809402837127 -3.8690216096079743657 -11.759116481461878934 32.32202691853296983 -5.3884642239574267464 -13.560102017712612366 1.4183681346627396991;6.0796543671016589627 -1.381815424617567567 -6.4508887381362498559 1.1943329188348152936 1.1869150551069298505 -0.34755276487381930872 1.7699885612118704259 -0.26090614040147597219 -2.6576860458671469623 0.22546314171300910201;113.80425425974237896 0.30149596212737078682 -85.485865578876769177 0.21209908174928310265 -4.5718606112761905891 -5.5042504116408785819 10.992360869068589224 -1.7452207470743492657 -31.934815850656573133 4.3362769696990968171;-1.0220080322172373499 2.1317116699244520461 0.87482162600550161802 -2.3543305534554752612 2.3709052069779832372 0.19702427942774788927 -2.7403860917958007271 0.35124489873719555444 0.65512993353294035614 0.082970156005465173221];
IW1_2 = [-1.1238085342357622132 3.9940437263762440523 -0.80600261967406883201 -0.84444816156880186941 0.074971149476723508709;-1.0593862569311172095 3.0276301080690437573 -0.4668927112864935669 -0.5088416340206896038 0.5323962324774045296;0.997657810090544106 -2.8891422199041181251 0.57129499823337070996 0.83875553269076286167 -0.078200656050651712325;2.9540410505031409194 -7.1619781139612506138 3.4650466705666267409 -1.6720062090373937203 0.54580641832812637482;20.525584919237665815 -15.919615637768131933 -11.881740900740005884 -5.2322952962555957512 1.102374910384544382;-1.2820721230526237466 0.55650732959333304439 -0.062324733857715419738 -0.29982381742523744883 0.073765110694332627905;0.2748410579102459339 -0.47665824246660137842 -5.6706980683586261094 -2.5668227660383053923 3.6376872816473548866;2.2260740306125748056 -1.7966771256538367485 0.57273522215258987345 -0.058920363926305639735 -0.10707166378769944481];

% Layer 2
b2 = -0.011419791765429046851;
LW2_1 = [-0.72311762223568387675 3.467285341471472826 2.3993165739830653038 -0.052557854696581307596 -0.006586331655083143069 -0.41288602917670125247 -0.042987529117080709729 0.65414904098790449538];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0045662100456621;
y1_step1.xoffset = 52;

% ===== SIMULATION ========

% Dimensions
TS = size(x1,2); % timesteps

% Input 1 Delay States
xd1 = mapminmax_apply(xi1,x1_step1);
xd1 = [xd1 zeros(2,1)];

% Input 2 Delay States
xd2 = mapminmax_apply(xi2,x2_step1);
xd2 = [xd2 zeros(1,1)];

% Allocate Outputs
y1 = zeros(1,TS);

% Time loop
for ts=1:TS
    
    % Rotating delay state position
    xdts = mod(ts+4,6)+1;
    
    % Input 1
    xd1(:,xdts) = mapminmax_apply(x1(:,ts),x1_step1);
    
    % Input 2
    xd2(:,xdts) = mapminmax_apply(x2(:,ts),x2_step1);
    
    % Layer 1
    tapdelay1 = reshape(xd1(:,mod(xdts-[1 2 3 4 5]-1,6)+1),10,1);
    tapdelay2 = reshape(xd2(:,mod(xdts-[1 2 3 4 5]-1,6)+1),5,1);
    a1 = tansig_apply(b1 + IW1_1*tapdelay1 + IW1_2*tapdelay2);
    
    % Layer 2
    a2 = b2 + LW2_1*a1;
    
    % Output 1
    y1(:,ts) = mapminmax_reverse(a2,y1_step1);
end

% Final delay states
finalxts = TS+(1: 5);
xits = finalxts(finalxts<=5);
xts = finalxts(finalxts>5)-5;
xf1 = [xi1(:,xits) x1(:,xts)];
xf2 = [xi2(:,xits) x2(:,xts)];
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
